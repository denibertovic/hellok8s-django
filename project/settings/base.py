"""
Django settings for hellok8s project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ

env = environ.Env()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.get_value("DJANGO_SECRET_KEY", default="CHANGEME")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DJANGO_DEBUG", False)

HOSTNAME = env.get_value("DJANGO_HOSTNAME", default="localhost")

ALLOWED_HOSTS = [
    "localhost",  # we still explicitly add localhost
    HOSTNAME,
    env.get_value("K8S_POD_IP", default="127.0.0.1"),
] + env.list("DJANGO_ALLOWED_HOSTS", default=[])

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "core",
    "myauth",
    "django_cf_turnstile",
    "allauth",
    "allauth.account",
    "rest_framework",
    "storages",
    "myutils",
    "post",
]

# custom auth
AUTH_USER_MODEL = "myauth.MyUser"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_ratelimit.middleware.RatelimitMiddleware",
    "allauth.account.middleware.AccountMiddleware",  # Required by allauth
]


AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

# Allauth settings
ACCOUNT_FORMS = {
    "login": "myauth.forms.LoginForm",
    "signup": "myauth.forms.SignupForm",
    "reset_password": "myauth.forms.ResetPasswordForm",
}


ACCOUNT_ADAPTER = (
    "myauth.adapters.NoNewUsersAccountAdapter"  # Custom registration control
)

ACCOUNT_LOGIN_METHODS = {"email"}
ACCOUNT_SIGNUP_FIELDS = [
    "email*",
    "password1*",
    "password2*",
]
ACCOUNT_EMAIL_VERIFICATION = (
    "mandatory"  # Require email verification before account access
)
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USER_MODEL_EMAIL_FIELD = "email"
ACCOUNT_LOGOUT_ON_GET = True  # Skip logout confirmation page

# Login/logout URLs
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"
ACCOUNT_LOGOUT_REDIRECT_URL = "/"

# Email Configuration
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
DEFAULT_FROM_EMAIL = env.get_value(
    "DEFAULT_FROM_EMAIL", default="noreply@send.hellok8s-django.deni.cloud"
)


if DEBUG:
    INSTALLED_APPS += ["django_browser_reload"]
    MIDDLEWARE += [
        "django_browser_reload.middleware.BrowserReloadMiddleware",
    ]


ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    # Raises ImproperlyConfigured exception if DATABASE_URL not in os.environ
    "default": env.db(
        "DJANGO_DATABASE_URL",
        default="postgres://postgres:postgres@postgres:5432/postgres",
    ),
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


MEDIA_ROOT = env.get_value("DJANGO_MEDIA_ROOT", default="media")
MEDIA_URL = "/media/"

STATIC_ROOT = env.get_value("DJANGO_STATIC_ROOT", default="static")
STATIC_URL = "/static/"
ADMIN_MEDIA_PREFIX = "/static/admin/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CSRF_COOKIE_SECURE = env.bool("DJANGO_CSRF_COOKIE_SECURE", False)
CSRF_TRUSTED_ORIGINS = env.list("DJANGO_CSRF_TRUSTED_ORIGINS", default=[])

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "WARNING",
    },
}

# Redis Configuration
REDIS_URL = env.get_value("REDIS_URL", default="redis://redis:6379/0")
REDIS_COLLECTFASTA_URL = env.get_value("REDIS_COLLECTFASTA_URL", default=REDIS_URL)

COLLECTFASTA_STRATEGY = "collectfasta.strategies.filesystem.FileSystemStrategy"
# Celery Configuration
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = TIME_ZONE

# Django-ratelimit configuration
RATELIMIT_USE_CACHE = "default"
RATELIMIT_ENABLE = True  # not DEBUG
RATELIMIT_VIEW = "myutils.views.ratelimit_view"

# Cache configuration for django-ratelimit
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": REDIS_URL,
    }
}

# Commented out to allow proper async task processing in development
# Uncomment if you want tasks to run synchronously in development
# if DEBUG:
#     CELERY_TASK_ALWAYS_EAGER = True
#     CELERY_TASK_EAGER_PROPAGATES = True


# Cloudflare turnstile
CF_TURNSTILE_SITE_KEY = env.get_value(
    "CF_TURNSTILE_SITE_KEY", default="1x00000000000000000000AA"
)
CF_TURNSTILE_SECRET_KEY = env.get_value(
    "CF_TURNSTILE_SECRET_KEY", default="1x0000000000000000000000000000000AA"
)

# Registration control
ALLOW_REGISTRATION = env.bool("DJANGO_ALLOW_REGISTRATION", default=False)
